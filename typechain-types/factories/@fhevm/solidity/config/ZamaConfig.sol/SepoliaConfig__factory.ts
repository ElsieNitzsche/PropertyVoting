/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SepoliaConfig,
  SepoliaConfigInterface,
} from "../../../../../@fhevm/solidity/config/ZamaConfig.sol/SepoliaConfig";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6074806101965f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063da1f12ab14602a575b5f80fd5b604051612711815260200160405180910390f3fea2646970667358221220508194673a7a466ae62a9c4336bd6bdac59b25ed175a8965d63213d6cc22cbe864736f6c63430008180033";

type SepoliaConfigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SepoliaConfigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SepoliaConfig__factory extends ContractFactory {
  constructor(...args: SepoliaConfigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SepoliaConfig> {
    return super.deploy(overrides || {}) as Promise<SepoliaConfig>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SepoliaConfig {
    return super.attach(address) as SepoliaConfig;
  }
  override connect(signer: Signer): SepoliaConfig__factory {
    return super.connect(signer) as SepoliaConfig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SepoliaConfigInterface {
    return new utils.Interface(_abi) as SepoliaConfigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SepoliaConfig {
    return new Contract(address, _abi, signerOrProvider) as SepoliaConfig;
  }
}
