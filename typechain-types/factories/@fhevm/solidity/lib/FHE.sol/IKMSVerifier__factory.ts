/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IKMSVerifier,
  IKMSVerifierInterface,
} from "../../../../../@fhevm/solidity/lib/FHE.sol/IKMSVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "handlesList",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "decryptedResult",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "verifyDecryptionEIP712KMSSignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IKMSVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IKMSVerifierInterface {
    return new utils.Interface(_abi) as IKMSVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKMSVerifier {
    return new Contract(address, _abi, signerOrProvider) as IKMSVerifier;
  }
}
